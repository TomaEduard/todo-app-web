{"ast":null,"code":"import _defineProperty from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\src\\\\components\\\\todo\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nimport './TodoApp.css';\n\nvar LoginComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginComponent, _Component);\n\n  function LoginComponent(props) {\n    var _this;\n\n    _classCallCheck(this, LoginComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginComponent).call(this, props));\n\n    _this.handleChange = function (event) {\n      //console.log(this.state);\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.loginClicked = function () {\n      // if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n      //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n      //     this.props.history.push(`/welcome/${this.state.username}`)\n      //     //this.setState({showSuccessMessage:true})\n      //     //this.setState({hasLoginFailed:false})\n      // }\n      // else {\n      //     this.setState({showSuccessMessage:false})\n      //     this.setState({hasLoginFailed:true})\n      // }\n      // Basic Auth\n      // AuthenticationService\n      // .executeBasicAuthenticationService(this.state.username, this.state.password)\n      // .then(() => {\n      //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n      //     this.props.history.push(`/welcome/${this.state.username}`)\n      // }).catch( () =>{\n      //     this.setState({showSuccessMessage:false})\n      //     this.setState({hasLoginFailed:true})\n      // })\n      AuthenticationService.executeJwtAuthenticationService(_this.state.username, _this.state.password).then(function (response) {\n        // save user in local storage & put token for every request with \"axios.interceptors.request.use\"\n        AuthenticationService.registerSuccessfulLoginForJwt(_this.state.username, response.data.token);\n\n        _this.props.history.push(\"/welcome/\".concat(_this.state.username));\n      }).catch(function (error) {\n        _this.setState({\n          showSuccessMessage: false\n        });\n\n        _this.setState({\n          hasLoginFailed: true\n        });\n\n        console.log(error.response);\n      });\n      return Promise.reject(error.response);\n    };\n\n    _this.state = {\n      username: 'in28minutes',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n      // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n      // this.handleChange = this.handleChange.bind(this)\n      // this.loginClicked = this.loginClicked.bind(this)\n\n    };\n    return _this;\n  }\n\n  _createClass(LoginComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.hasLoginFailed && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Invalid Credentials\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Login Sucessful\"), \"User Name: \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), \"Password: \", React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.loginClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginComponent;\n}(Component);\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:\\IT\\Javascript\\2. React\\todo-app-web\\src\\components\\todo\\LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","props","handleChange","event","setState","target","name","value","loginClicked","executeJwtAuthenticationService","state","username","password","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch","error","showSuccessMessage","hasLoginFailed","console","log","Promise","reject"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,OAAO,eAAP;;IAEMC,c;;;;;AAEF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;;AADe,UAgBnBC,YAhBmB,GAgBJ,UAACC,KAAD,EAAW;AACtB;AACA,YAAKC,QAAL,qBAESD,KAAK,CAACE,MAAN,CAAaC,IAFtB,EAGWH,KAAK,CAACE,MAAN,CAAaE,KAHxB;AAMH,KAxBkB;;AAAA,UAyCnBC,YAzCmB,GAyCJ,YAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAT,MAAAA,qBAAqB,CACpBU,+BADD,CACiC,MAAKC,KAAL,CAAWC,QAD5C,EACsD,MAAKD,KAAL,CAAWE,QADjE,EAECC,IAFD,CAEM,UAACC,QAAD,EAAc;AAChB;AACAf,QAAAA,qBAAqB,CAACgB,6BAAtB,CAAoD,MAAKL,KAAL,CAAWC,QAA/D,EAAwEG,QAAQ,CAACE,IAAT,CAAcC,KAAtF;;AACA,cAAKhB,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,oBAAoC,MAAKT,KAAL,CAAWC,QAA/C;AAEH,OAPD,EAOGS,KAPH,CAOU,UAACC,KAAD,EAAU;AAChB,cAAKjB,QAAL,CAAc;AAACkB,UAAAA,kBAAkB,EAAC;AAApB,SAAd;;AACA,cAAKlB,QAAL,CAAc;AAACmB,UAAAA,cAAc,EAAC;AAAhB,SAAd;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACP,QAAlB;AACH,OAXD;AAYA,aAAOY,OAAO,CAACC,MAAR,CAAeN,KAAK,CAACP,QAArB,CAAP;AACH,KA7EkB;;AAGf,UAAKJ,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,aADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAITW,MAAAA,cAAc,EAAE,KAJP;AAKTD,MAAAA,kBAAkB,EAAE,KALX,CAOb;AACA;AACA;AACA;;AAVa,KAAb;AAHe;AAclB;;;;6BAiEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKZ,KAAL,CAAWa,cAAX,IAA6B;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFlC,EAGK,KAAKb,KAAL,CAAWY,kBAAX,IAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHtC,iBAKe;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,QAArD;AAA+D,QAAA,QAAQ,EAAE,KAAKT,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALf,gBAMc;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWE,QAAzD;AAAoE,QAAA,QAAQ,EAAE,KAAKV,YAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANd,EAOI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKM,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPJ,CAFJ,CADJ;AAcH;;;;EAhGwBV,S;;AAmG7B,eAAeE,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nimport './TodoApp.css';\n\nclass LoginComponent extends Component {\n    \n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            username: 'in28minutes',\n            password: '',\n\n            hasLoginFailed: false,\n            showSuccessMessage: false,\n        }\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        // this.handleChange = this.handleChange.bind(this)\n        // this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange = (event) => {\n        //console.log(this.state);\n        this.setState(\n            {\n                [event.target.name]\n                  :event.target.value\n            }\n        )\n    }\n\n    // handleUsernameChange(event) {\n    //     console.log(event.target.name);\n    //     this.setState(\n    //         {\n    //             [event.target.name]\n    //               :event.target.value\n    //         }\n    //     )\n    // }\n\n    // handlePasswordChange(event) {\n    //     console.log(event.target.value);\n    //     this.setState({password:event.target.value})\n    // }\n\n    loginClicked = () => {\n        // if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n        //     this.props.history.push(`/welcome/${this.state.username}`)\n        //     //this.setState({showSuccessMessage:true})\n        //     //this.setState({hasLoginFailed:false})\n        // }\n        // else {\n        //     this.setState({showSuccessMessage:false})\n        //     this.setState({hasLoginFailed:true})\n        // }\n\n        // Basic Auth\n        // AuthenticationService\n        // .executeBasicAuthenticationService(this.state.username, this.state.password)\n        // .then(() => {\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n        //     this.props.history.push(`/welcome/${this.state.username}`)\n        // }).catch( () =>{\n        //     this.setState({showSuccessMessage:false})\n        //     this.setState({hasLoginFailed:true})\n        // })\n\n        AuthenticationService\n        .executeJwtAuthenticationService(this.state.username, this.state.password)\n        .then((response) => {\n            // save user in local storage & put token for every request with \"axios.interceptors.request.use\"\n            AuthenticationService.registerSuccessfulLoginForJwt(this.state.username,response.data.token)\n            this.props.history.push(`/welcome/${this.state.username}`)\n\n        }).catch( (error) =>{\n            this.setState({showSuccessMessage:false})\n            this.setState({hasLoginFailed:true})\n            console.log(error.response)\n        })\n        return Promise.reject(error.response);\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password}  onChange={this.handleChange}/>\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}