{"ast":null,"code":"import _classCallCheck from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\IT\\\\Javascript\\\\2. React\\\\todo-app-web\\\\src\\\\components\\\\todo\\\\ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport moment from 'moment';\n\nvar ListTodosComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListTodosComponent, _Component);\n\n  function ListTodosComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ListTodosComponent);\n\n    // accept props\n    console.log('constructor');\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListTodosComponent).call(this, props)); // pass props to super class\n\n    _this.componentWillUnmount = function () {\n      console.log('componentWillUnmount');\n    };\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      console.log('shouldComponentUpdate');\n      console.log(nextProps);\n      console.log(nextState);\n      return true;\n    };\n\n    _this.componentDidMount = function () {\n      console.log('componentDidMount');\n\n      _this.refreshTodos();\n\n      console.log(_this.state);\n    };\n\n    _this.refreshTodos = function () {\n      var username = AuthenticationService.getLoggedInUserName();\n      TodoDataService.retrieveAllTodos(username).then(function (response) {\n        //console.log(response);\n        _this.setState({\n          todos: response.data\n        });\n      });\n    };\n\n    _this.deleteTodoClicked = function (id) {\n      var username = AuthenticationService.getLoggedInUserName(); //console.log(id + \" \" + username);\n\n      TodoDataService.deleteTodo(username, id).then(function (response) {\n        _this.setState({\n          message: \"Delete of todo \".concat(id, \" Successful\")\n        });\n\n        _this.refreshTodos();\n      });\n    };\n\n    _this.addTodoClicked = function () {\n      _this.props.history.push(\"/todos/-1\");\n    };\n\n    _this.updateTodoClicked = function (id) {\n      console.log('update ' + id);\n\n      _this.props.history.push(\"/todos/\".concat(id)); // /todos/${id}\n      // let username = AuthenticationService.getLoggedInUserName()\n      // //console.log(id + \" \" + username);\n      // TodoDataService.deleteTodo(username, id)\n      //  .then (\n      //      response => {\n      //         this.setState({message : `Delete of todo ${id} Successful`})\n      //         this.refreshTodos()\n      //      }\n      //  )\n\n    };\n\n    _this.state = {\n      todos: [],\n      message: null // this.deleteTodoClicked = this.deleteTodoClicked.bind(this)   \n      // this.updateTodoClicked = this.updateTodoClicked.bind(this)   \n      // this.addTodoClicked = this.addTodoClicked.bind(this)\n      // this.refreshTodos = this.refreshTodos.bind(this)\n\n    };\n    return _this;\n  }\n\n  _createClass(ListTodosComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('render');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"List Todos\"), this.state.message && React.createElement(\"div\", {\n        className: \"alert alert-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Target Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"IsCompleted?\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Update\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Delete\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.todos.map(function (e) {\n        return React.createElement(\"tr\", {\n          key: e.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, e.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, e.done.toString()), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, moment(e.targetDate).format('YYYY-MM-DD')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          onClick: function onClick() {\n            return _this2.updateTodoClicked(e.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Update\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: function onClick() {\n            return _this2.deleteTodoClicked(e.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Delete\")));\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.addTodoClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Add\"))));\n    }\n  }]);\n\n  return ListTodosComponent;\n}(Component);\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["C:\\IT\\Javascript\\2. React\\todo-app-web\\src\\components\\todo\\ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","moment","ListTodosComponent","props","console","log","componentWillUnmount","shouldComponentUpdate","nextProps","nextState","componentDidMount","refreshTodos","state","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","todos","data","deleteTodoClicked","id","deleteTodo","message","addTodoClicked","history","push","updateTodoClicked","map","e","description","done","toString","targetDate","format"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\nimport moment from 'moment'\n\nclass ListTodosComponent extends Component {\n\n    constructor(props){     // accept props\n        console.log('constructor')\n        super(props)        // pass props to super class\n        this.state = {\n            todos : [],\n            message : null\n        }\n        // this.deleteTodoClicked = this.deleteTodoClicked.bind(this)   \n        // this.updateTodoClicked = this.updateTodoClicked.bind(this)   \n        // this.addTodoClicked = this.addTodoClicked.bind(this)\n        // this.refreshTodos = this.refreshTodos.bind(this)\n    }\n\n    componentWillUnmount = () => {\n        console.log('componentWillUnmount')\n    }\n    \n    shouldComponentUpdate = (nextProps, nextState) => {\n        console.log('shouldComponentUpdate')\n        console.log(nextProps)\n        console.log(nextState)\n        return true\n    }\n\n    componentDidMount = () => {\n        console.log('componentDidMount')\n        this.refreshTodos();\n        console.log(this.state)\n    }\n\n    refreshTodos = () => {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retrieveAllTodos(username)\n          .then(\n              response => {\n                  //console.log(response);\n                  this.setState({todos : response.data})\n              }\n          ) \n    }\n\n    deleteTodoClicked = (id) => {\n        let username = AuthenticationService.getLoggedInUserName()\n        //console.log(id + \" \" + username);\n        TodoDataService.deleteTodo(username, id)\n         .then (\n             response => {\n                this.setState({message : `Delete of todo ${id} Successful`})\n                this.refreshTodos()\n             }\n         )\n        \n    }\n\n    addTodoClicked = () => {\n        this.props.history.push(`/todos/-1`)\n    }\n\n    updateTodoClicked = (id) => {\n        console.log('update ' + id)\n        this.props.history.push(`/todos/${id}`)\n        // /todos/${id}\n        // let username = AuthenticationService.getLoggedInUserName()\n        // //console.log(id + \" \" + username);\n        // TodoDataService.deleteTodo(username, id)\n        //  .then (\n        //      response => {\n        //         this.setState({message : `Delete of todo ${id} Successful`})\n        //         this.refreshTodos()\n        //      }\n        //  )\n        \n    }\n\n    render() {\n        console.log('render')\n        return (\n            <div>\n                 <h1>List Todos</h1>\n                 {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                 <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Target Date</th>\n                                <th>IsCompleted?</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.todos.map (\n                                e =>\n                                    <tr key={e.id}>\n                                        <td>{e.description}</td>\n                                        <td>{e.done.toString()}</td>\n                                        <td>{moment(e.targetDate).format('YYYY-MM-DD')}</td>\n                                        <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(e.id)}>Update</button></td>\n                                        <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(e.id)}>Delete</button></td>\n                                    </tr>\n                            )\n                            }\n                        </tbody>\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.addTodoClicked}>Add</button>\n                    </div>\n                 </div>\n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent"]},"metadata":{},"sourceType":"module"}